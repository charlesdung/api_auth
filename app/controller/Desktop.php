<?php


namespace app\controller;

use app\controller\Base;

use app\model\Table as models;
use app\model\TableLangModel;
use app\traits\PublicCrudTrait;
use app\validate\TableValidate as validates;
use think\exception\ValidateException;
use hg\apidoc\annotation as Apidoc;

class Desktop extends Base
{
    protected $model;
    use PublicCrudTrait;

    /**
     * 桌面控制器
     */
    public function initialize()
    {
        $this->model = new models();
        parent::initialize(); // TODO: Change the autogenerated stub
    }


    /**
     * @Apidoc\Title("台桌列表")
     * @Apidoc\Method("POST")
     * @Apidoc\Url("/desktop/list")
     * @Apidoc\Param("page", type="int",require=true,default="1", desc="页码")
     * @Apidoc\Param("limit", type="int",require=true,default="10",desc="条数")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function index()
    {
        //当前页
        $page = $this->request->post('page', 1);
        //每页显示数量
        $limit = $this->request->post('limit', 100);
        //查询搜索条件
        $post = array_filter($this->request->post());
        $map = [];
        isset($post['table_title']) && $map [] = ['table_title', 'like', '%' . $post['table_title'] . '%'];

        $list = $this->model->page_list($map, $limit, $page);
         $this->success($list);
    }
    /**
     * 更新是否点击
     */
    public function updatedianji()
    {
        //过滤数据
        $postField = 'id,is_dianji';
        $post = $this->request->only(explode(',', $postField), 'post', null);
        $save = $this->model->update($post);
        if ($save) $this->success([]);
        $this->failed('修改失败');
    }

    /**
     * @Apidoc\Title("台桌新增")
     * @Apidoc\Method("POST")
     * @Apidoc\Url("/desktop/add")
     * @Apidoc\Param("admin_type", type="int",require=true, desc="")
     * @Apidoc\Param("status", type="int",require=true,desc="")
     * @Apidoc\Param("run_status", type="int",require=true,desc="运行状态 1投注 2开牌 3洗牌等")
     * @Apidoc\Param("start_time", type="int",require=true,desc="当前局倒计时开始时间 时间戳计算倒计时")
     * @Apidoc\Param("create_time", type="string",require=true,desc="创建时间")
     * @Apidoc\Param("update_time", type="string",require=true,desc="更新时间")
     * @Apidoc\Param("video_near", type="string",require=true,desc="近景视频地址")
     * @Apidoc\Param("video_far", type="string",require=true,desc="远景视频地址")
     * @Apidoc\Param("table_title", type="string",require=true,desc="台桌名字")
     * @Apidoc\Param("table_describe", type="string",require=true,desc="台桌描述")
     * @Apidoc\Param("he_guan_head_img", type="array",require=true,desc="荷官头像")
     * @Apidoc\Param("he_guan_name", type="string",require=true,desc="荷官名称")
     * @Apidoc\Param("he_guan_describe", type="string",require=true,desc="荷官描述")
     * @Apidoc\Param("game_type", type="int",require=true,desc="游戏类型")
     * @Apidoc\Param("countdown_time", type="int",require=true,desc="倒计时 当局时间")
     * @Apidoc\Param("list_order", type="int",require=true,desc="显示排序")
     * @Apidoc\Param("game_play_staus", type="int",require=false,desc="游戏进行状态")
     * @Apidoc\Param("is_dianji", type="int",require=false,desc="是否点击")
     * @Apidoc\Param("is_weitou", type="int",require=false,desc="是否微投")
     * @Apidoc\Param("is_diantou", type="int",require=false,desc="是否电投")
     * @Apidoc\Param("remark", type="string",require=true,desc="备注信息")
     * @Apidoc\Param("xian_hong_zhuang_xian_usd", type="string",require=true,desc="限红庄闲美金")
     * @Apidoc\Param("xian_hong_zhuang_xian_cny", type="string",require=true,desc="限红庄闲人民币")
     * @Apidoc\Param("xian_hong_he_usd", type="string",require=true,desc="限红和美金")
     * @Apidoc\Param("xian_hong_he_cny", type="string",require=true,desc="限红和人民币")
     * @Apidoc\Param("xian_hong_duizi_usd", type="string",require=true,desc="限红对子美金")
     * @Apidoc\Param("xian_hong_duizi_cny", type="string",require=true,desc="限红对子人民币")
     * @Apidoc\Param("xian_hong_lucky6_cny", type="string",require=false,desc="仅荷官端展示-限红幸运6RMB")
     * @Apidoc\Param("xian_hong_lucky6_usd", type="string",require=false,desc="仅荷官端展示-限红幸运6美金")
     * @Apidoc\Param("lu_zhu_name", type="string",require=true,desc="露珠台桌名称")
     * @Apidoc\Param("wash_status", type="int",require=false,desc="洗牌状态 1在洗牌")
     * @Apidoc\Param("bjl_xian_hong_xian_max", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_zhuang_max", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_he_max", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_zhuang_dui_max", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_xian_dui_max", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_lucky6_max", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_long_max", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_hu_max", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_he_max",type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_xian_min", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_zhuang_min", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_he_min", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_zhuang_dui_min", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_xian_dui_min", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_lucky6_min", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_long_min", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_hu_min", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_he_min", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_chaoniu_max", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_chaoniu_min", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_fanbei_max", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_fanbei_min", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_pingbei_max", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_pingbei_min", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_chaoniu_max", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_chaoniu_min", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_fanbei_max", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_fanbei_min", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_pingbei_max", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_pingbei_min", type="int",require=false,desc="")
     * @Apidoc\Param("is_table_xian_hong", type="int",require=false,desc="")
     * @Apidoc\Param("type_name", type="string",require=true,desc="类型名称")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function add()
    {
        //过滤数据
        $post = $this->request->post();
        //验证数据
        try {
            validate(validates::class)->scene('add')->check($post);
        } catch (ValidateException $e) {
            // 验证失败 输出错误信息
             $this->failed($e->getError());
        }

        $user = $this->model->where('table_title', $post['table_title'])->find();
        if ($user)  $this->failed('该台桌以存在');
        //处理图片
       isset($post['he_guan_head_img']) && $post['he_guan_head_img']= image_update($post['he_guan_head_img']);
        $post['start_time'] =  strtotime($post['start_time']);
        $post['create_time'] = date('Y-m-d H:i:s');
        $post['update_time'] = date('Y-m-d H:i:s');
        $post['game_play_staus'] =$post['is_dianji']=$post['is_weitou']=$post['is_diantou']= 0;
        $save = $this->model->save($post);
        if ($save)  $this->success([]);
         $this->failed('新增失败');
    }



    /**
     * @Apidoc\Title("台桌编辑")
     * @Apidoc\Method("POST")
     * @Apidoc\Url("/desktop/edit")
     * @Apidoc\Param("admin_type", type="int",require=true, desc="")
     * @Apidoc\Param("id", type="int",require=true, desc="id")
     * @Apidoc\Param("status", type="int",require=true,desc="")
     * @Apidoc\Param("run_status", type="int",require=true,desc="运行状态 1投注 2开牌 3洗牌等")
     * @Apidoc\Param("start_time", type="int",require=true,desc="当前局倒计时开始时间 时间戳计算倒计时")
     * @Apidoc\Param("create_time", type="string",require=true,desc="创建时间")
     * @Apidoc\Param("update_time", type="string",require=true,desc="更新时间")
     * @Apidoc\Param("video_near", type="string",require=true,desc="近景视频地址")
     * @Apidoc\Param("video_far", type="string",require=true,desc="远景视频地址")
     * @Apidoc\Param("table_title", type="string",require=true,desc="台桌名字")
     * @Apidoc\Param("table_describe", type="string",require=true,desc="台桌描述")
     * @Apidoc\Param("he_guan_head_img", type="array",require=true,desc="荷官头像")
     * @Apidoc\Param("he_guan_name", type="string",require=true,desc="荷官名称")
     * @Apidoc\Param("he_guan_describe", type="string",require=true,desc="荷官描述")
     * @Apidoc\Param("game_type", type="int",require=true,desc="游戏类型")
     * @Apidoc\Param("countdown_time", type="int",require=true,desc="倒计时 当局时间")
     * @Apidoc\Param("list_order", type="int",require=true,desc="显示排序")
     * @Apidoc\Param("game_play_staus", type="int",require=false,desc="游戏进行状态")
     * @Apidoc\Param("is_dianji", type="int",require=false,desc="是否点击")
     * @Apidoc\Param("is_weitou", type="int",require=false,desc="是否微投")
     * @Apidoc\Param("is_diantou", type="int",require=false,desc="是否电投")
     * @Apidoc\Param("remark", type="string",require=true,desc="备注信息")
     * @Apidoc\Param("xian_hong_zhuang_xian_usd", type="string",require=true,desc="限红庄闲美金")
     * @Apidoc\Param("xian_hong_zhuang_xian_cny", type="string",require=true,desc="限红庄闲人民币")
     * @Apidoc\Param("xian_hong_he_usd", type="string",require=true,desc="限红和美金")
     * @Apidoc\Param("xian_hong_he_cny", type="string",require=true,desc="限红和人民币")
     * @Apidoc\Param("xian_hong_duizi_usd", type="string",require=true,desc="限红对子美金")
     * @Apidoc\Param("xian_hong_duizi_cny", type="string",require=true,desc="限红对子人民币")
     * @Apidoc\Param("xian_hong_lucky6_cny", type="string",require=false,desc="仅荷官端展示-限红幸运6RMB")
     * @Apidoc\Param("xian_hong_lucky6_usd", type="string",require=false,desc="仅荷官端展示-限红幸运6美金")
     * @Apidoc\Param("lu_zhu_name", type="string",require=true,desc="露珠台桌名称")
     * @Apidoc\Param("wash_status", type="int",require=false,desc="洗牌状态 1在洗牌")
     * @Apidoc\Param("bjl_xian_hong_xian_max", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_zhuang_max", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_he_max", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_zhuang_dui_max", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_xian_dui_max", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_lucky6_max", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_long_max", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_hu_max", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_he_max",type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_xian_min", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_zhuang_min", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_he_min", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_zhuang_dui_min", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_xian_dui_min", type="int",require=false,desc="")
     * @Apidoc\Param("bjl_xian_hong_lucky6_min", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_long_min", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_hu_min", type="int",require=false,desc="")
     * @Apidoc\Param("lh_xian_hong_he_min", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_chaoniu_max", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_chaoniu_min", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_fanbei_max", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_fanbei_min", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_pingbei_max", type="int",require=false,desc="")
     * @Apidoc\Param("nn_xh_pingbei_min", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_chaoniu_max", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_chaoniu_min", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_fanbei_max", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_fanbei_min", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_pingbei_max", type="int",require=false,desc="")
     * @Apidoc\Param("sg_xh_pingbei_min", type="int",require=false,desc="")
     * @Apidoc\Param("is_table_xian_hong", type="int",require=false,desc="")
     * @Apidoc\Param("type_name", type="string",require=true,desc="类型名称")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function edit()
    {
        $post = $this->request->post();
        //验证数据
        try {
            validate(validates::class)->scene('edit')->check($post);
        } catch (ValidateException $e) {
            // 验证失败 输出错误信息
             $this->failed($e->getError());
        }

        //查询是否重复的该菜单
        $find = $this->model->where('table_title', $post['table_title'])->where('id', '<>', $post['id'])->find();
        if ($find)  $this->failed('该标题以存在');
        if (isset($post['he_guan_head_img']) && is_array($post['he_guan_head_img'])){
            $post['he_guan_head_img']= image_update($post['he_guan_head_img']);
        }
        $post['start_time'] =  strtotime($post['start_time']);
        //执行修改数据
        $save = $this->model->update($post);

        if ($save)  $this->success([]);
         $this->failed('修改失败');
    }

    public function detail()
    {
        //过滤数据
        $postField = 'id';
        $post = $this->request->only(explode(',', $postField), 'post', null);
        if (!isset($post['id']) || $post['id'] <= 0 ){
             $this->failed('ID不存在');
        }
        //查询
        $user = $this->model->find($post['id']);
        if ($user)  $this->success($user);
         $this->failed('文章不存在');
    }

    //根据游戏类型获取台座
    public function table_list()
    {
        $game_type = $this->request->param('game_type/d',0);
        if ($game_type <= 0) $this->failed('game_type参数错误');
        $list =$this->model->where('game_type',$game_type)->order('id asc')->paginate(['list_rows' => 100, 'page' => 1], false);
        $this->success($list);
    }

    //游戏规则多语言
    public function game_lang_list()
    {
        $post = $this->request->post();
        if (!isset($post['id']) || $post['id'] <= 0) $this->failed('ID必填');
        $info = TableLangModel::table_explain($post['id']);
        $this->success($info);
    }

    public function game_lang_edit()
    {
        $postField = 'id,zh,en,jp,kor,tha,vnm';//过滤数据
        $post = $this->request->only(explode(',', $postField), 'post', null);
        $post = array_filter($post);
        if (!isset($post['id']) || $post['id'] <= 0) $this->failed('ID必填');
        $id = $post['id'];
        unset($post['id']);
        try {
            foreach ($post as $key => $value) {
                $lang_type = $key;
                if ($key == 'zh') {
                    $find = TableLangModel::page_one(['table_id' => $id, 'lang_type' => 'zh-cn']);
                    $lang_type = 'zh-cn';
                } elseif ($key == 'en') {
                    $find = TableLangModel::page_one(['table_id' => $id, 'lang_type' => 'en-us']);
                    $lang_type = 'en-us';
                } else {
                    $find = TableLangModel::page_one(['table_id' => $id, 'lang_type' => $key]);
                }
                if (empty($find)) {//为空时插入数据
                    TableLangModel::set_insert(['table_id' => $id, 'lang_type' => $lang_type, 'explain' => $value]);
                    continue;
                }
                //非空时修改数据
                TableLangModel::set_update(['id' => $find->id, 'explain' => $value]);
                continue;
            }
        } catch (\Exception $e) {
            $this->failed($e->getMessage());// 这是进行异常捕获
        }
        $this->success([]);
    }
    /**
     * @Apidoc\Title("台桌删除")
     * @Apidoc\Method("POST")
     * @Apidoc\Url("/desktop/del")
     * @Apidoc\Param("id", type="int",require=true, desc="ID")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function del()
    {
        $id = $this->request->post('id', 0);
        if ($id < 1) $this->failed('ID错误');

        //模型删除
        $del = $this->model->where('id',$id)->update(['status'=>-1]);
        if ($del) $this->success([]);
        $this->failed('删除失败，数据不存在');
    }
    
        //限红开启关闭
    public function is_xh(){
        $id = $this->request->post('id', 0);
        if ($id < 1) $this->failed('ID错误');
        $is_xh = $this->request->post('is_xh', 0);
        //模型删除
        $del = $this->model->where('id',$id)->update(['is_table_xian_hong'=>$is_xh]);
        if ($del) $this->success([]);
        $this->failed('修改失败，数据不存在');
    }
}